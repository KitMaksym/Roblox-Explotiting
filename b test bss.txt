local player = game.Players.LocalPlayer
local activeConnections = {} -- Stores all active event connections
local activeLoops = {} -- Stores all active coroutines
local screenGui = nil -- Stores the GUI instance

-- Cleanup function to prevent memory leaks and lag
local function cleanAll()
    -- Disconnect all active connections
    for _, connection in pairs(activeConnections) do
        connection:Disconnect()
    end
    activeConnections = {}

    -- Stop all active loops
    for _, loop in pairs(activeLoops) do
        coroutine.close(loop)
    end
    activeLoops = {}

    -- Destroy the GUI if it exists
    if screenGui and screenGui.Parent then
        screenGui:Destroy()
    end
end

-- Main initialization function
local function initialize()
    cleanAll() -- Clean up previous instance before starting a new one

    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local autoHealActive = false
    local killAuraActive = false
    local guiVisible = false

    -- Create the GUI
    screenGui = Instance.new("ScreenGui")
    screenGui.Name = "KillAuraGUI"
    screenGui.Parent = player:WaitForChild("PlayerGui")

    -- KillAura Button
    local killAuraButton = Instance.new("TextButton")
    killAuraButton.Name = "KillAuraButton"
    killAuraButton.Size = UDim2.new(0, 100, 0, 50)
    killAuraButton.Position = UDim2.new(0.5, -220, 0.1, 0)
    killAuraButton.Text = "KILLAURA: OFF"
    killAuraButton.BackgroundColor3 = Color3.new(1, 0, 0)
    killAuraButton.TextScaled = true
    killAuraButton.Parent = screenGui

    -- Auto Heal Button
    local autoHealButton = Instance.new("TextButton")
    autoHealButton.Name = "AutoHealButton"
    autoHealButton.Size = UDim2.new(0, 100, 0, 50)
    autoHealButton.Position = UDim2.new(0.5, -340, 0.1, 0)
    autoHealButton.Text = "AUTO HEAL: OFF"
    autoHealButton.BackgroundColor3 = Color3.new(1, 0, 0)
    autoHealButton.TextScaled = true
    autoHealButton.Parent = screenGui

    -- TP to Exit Button
    local tpExitButton = Instance.new("TextButton")
    tpExitButton.Name = "TPExitButton"
    tpExitButton.Size = UDim2.new(0, 100, 0, 50)
    tpExitButton.Position = UDim2.new(0.5, -100, 0.1, 0)
    tpExitButton.Text = "TP to Exit"
    tpExitButton.BackgroundColor3 = Color3.new(0, 0.5, 1)
    tpExitButton.TextScaled = true
    tpExitButton.Parent = screenGui

    -- Damage Boost Button
    local damageBoostButton = Instance.new("TextButton")
    damageBoostButton.Name = "DamageBoostButton"
    damageBoostButton.Size = UDim2.new(0, 100, 0, 50)
    damageBoostButton.Position = UDim2.new(0.5, 20, 0.1, 0)
    damageBoostButton.Text = "Damage Boost"
    damageBoostButton.BackgroundColor3 = Color3.new(1, 0.5, 0)
    damageBoostButton.TextScaled = true
    damageBoostButton.Parent = screenGui

    -- Turn On Exit Button
    local turnOnExitButton = Instance.new("TextButton")
    turnOnExitButton.Name = "TurnOnExitButton"
    turnOnExitButton.Size = UDim2.new(0, 120, 0, 50)
    turnOnExitButton.Position = UDim2.new(1, -130, 0, 10)
    turnOnExitButton.Text = "Turn On Exit"
    turnOnExitButton.BackgroundColor3 = Color3.new(0, 0.5, 0)
    turnOnExitButton.TextScaled = true
    turnOnExitButton.Parent = screenGui

    -- Insta-Kill Button
    local instaKillButton = Instance.new("TextButton")
    instaKillButton.Name = "InstaKillButton"
    instaKillButton.Size = UDim2.new(0, 100, 0, 50)
    instaKillButton.Position = UDim2.new(0.5, 140, 0.1, 0)
    instaKillButton.Text = "Insta-Kill"
    instaKillButton.BackgroundColor3 = Color3.new(1, 0, 1)
    instaKillButton.TextScaled = true
    instaKillButton.Parent = screenGui

    -- Extra Boost Button (NEW)
    local extraBoostButton = Instance.new("TextButton")
    extraBoostButton.Name = "ExtraBoostButton"
    extraBoostButton.Size = UDim2.new(0, 100, 0, 50)
    extraBoostButton.Position = UDim2.new(0.5, 260, 0.1, 0)
    extraBoostButton.Text = "Extra Boost"
    extraBoostButton.BackgroundColor3 = Color3.new(0.2, 0.6, 0.2)
    extraBoostButton.TextScaled = true
    extraBoostButton.Parent = screenGui

    -- GUI Toggle Button
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Size = UDim2.new(0, 50, 0, 50)
    toggleButton.Position = UDim2.new(0, 10, 0, 10)
    toggleButton.Text = "B"
    toggleButton.BackgroundColor3 = Color3.new(0, 0, 0)
    toggleButton.TextScaled = true
    toggleButton.TextColor3 = Color3.new(1, 1, 1)
    toggleButton.Parent = screenGui

    -- KillAura Loop
    local function killAuraLoop()
        while killAuraActive and task.wait() do
            local boss = workspace:FindFirstChild("Boss", true)
            if not boss or not boss:FindFirstChild("HumanoidRootPart") then continue end

            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            local bossRoot = boss:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart and bossRoot then
                humanoidRootPart.CFrame = bossRoot.CFrame * CFrame.new(0, 0, 0)
            end
	    local args = {
 		3
			 }
	    game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("Overwrite"):WaitForChild("Frame"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
            local sword = player.Backpack:FindFirstChild("ClassicSword") or character:FindFirstChild("ClassicSword")
            if sword then
                if sword.Parent ~= character then
                    humanoid:EquipTool(sword)
                    task.wait(0)
                end
                sword:Activate()
	    local args = {
 		3
			 }
	    game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("Overwrite"):WaitForChild("Frame"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
            end
        end
    end

    -- Auto Heal Loop
    local function autoHealLoop()
        while autoHealActive and task.wait() do
            task.wait()
            local args = {
 		5
			 }
	    game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("Overwrite"):WaitForChild("Frame"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
	    local args = {
 		2
			 }
	    game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("Overwrite"):WaitForChild("Frame"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        end
    end

    -- Damage Boost Loop
    local function damageBoost()
        for i = 1, 50 do
            local args = { [1] = { [1] = "", [2] = "", [3] = "Strength Soda" } }
            game:GetService("ReplicatedStorage"):WaitForChild("GiveItemsEvent"):FireServer(unpack(args))

            task.wait(0)
            local soda = player.Backpack:FindFirstChild("Strength Soda")
            if soda then
                humanoid:EquipTool(soda)
                soda:Activate()
                task.wait(0)
                soda:Destroy()
            end
        end
    end

    -- Teleport to Exit
    local function teleportToExit()
        local mainMirror = workspace:FindFirstChild("MainMirror", true)
        if not mainMirror or not mainMirror:IsA("BasePart") then return end

        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            humanoidRootPart.CFrame = mainMirror.CFrame
        end
    end

    -- Enable All Proximity Prompts
    local function enableAllProximityPrompts()
        for _, prompt in ipairs(workspace:GetDescendants()) do
            if prompt:IsA("ProximityPrompt") then
                prompt.Enabled = true
            end
        end
    end

    -- Insta-Kill Function
    local function instaKillBoss()
        local boss = workspace:FindFirstChild("Boss", true)
        if boss and boss:FindFirstChild("HumanoidRootPart") then
            local bossRoot = boss:FindFirstChild("HumanoidRootPart")
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")

            if humanoidRootPart and humanoidRootPart:IsA("BasePart") then
                -- Teleport player to boss
                humanoidRootPart.CFrame = bossRoot.CFrame
                task.wait(0.1)

                -- Anchor player to prevent flinging
                humanoidRootPart.Anchored = true

                -- Send boss to void
                local velocity = Instance.new("BodyVelocity")
                velocity.Velocity = Vector3.new(0, -5000, 5999)
                velocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                velocity.Parent = bossRoot

                -- Unanchor player after 3 seconds
                task.delay(1.5, function()
                    if humanoidRootPart and humanoidRootPart:IsA("BasePart") then
                        humanoidRootPart.Anchored = false
                    end
                end)

                -- Cleanup velocity after 1 second
                task.delay(1, function()
                    if velocity then
                        velocity:Destroy()
                    end
                end)
            end
        end
    end

    -- NEW: Extra Boost Functionality
    local function activateExtraBoost()
        -- Get references to required services/objects
        local replicatedStorage = game:GetService("ReplicatedStorage")
        local playerGui = player:WaitForChild("PlayerGui")
        -- Activate the glass vow 100 times
        local bindingVows = playerGui:WaitForChild("BindingVows")
        local vowsFrame = bindingVows:WaitForChild("VowsFrame")
        local vows = vowsFrame:WaitForChild("Vows")
        local chosenEvent = vows:WaitForChild("Chosen")
        
        -- Save original button state
        local originalText = extraBoostButton.Text
        local originalColor = extraBoostButton.BackgroundColor3
        
        -- Update button to show activity
        extraBoostButton.Text = "RUNNING..."
        extraBoostButton.BackgroundColor3 = Color3.new(0.8, 0.8, 0)
        
        -- Execute 100 activations
        for i = 1, 100 do
            local vowArgs = {"Enchain"}
            chosenEvent:FireServer(unpack(vowArgs))
	    local args = { [1] = { [1] = "", [2] = "", [3] = "Tough Brick" } }
            game:GetService("ReplicatedStorage"):WaitForChild("GiveItemsEvent"):FireServer(unpack(args))
            task.wait(0)  -- Small delay to prevent crashing
        end
        task.wait(0.15)
for _, tool in ipairs(player.Backpack:GetChildren()) do
    if tool:IsA("Tool") then
        humanoid:EquipTool(tool)
        tool:Activate()
        task.wait()
        tool:Destroy()
    end
end
        -- Restore original button state
        task.wait(0.1)
        extraBoostButton.Text = originalText
        extraBoostButton.BackgroundColor3 = originalColor
    end

    -- Button Actions
    table.insert(activeConnections, killAuraButton.MouseButton1Click:Connect(function()
        killAuraActive = not killAuraActive
        killAuraButton.Text = "KILLAURA: " .. (killAuraActive and "ON" or "OFF")
        killAuraButton.BackgroundColor3 = killAuraActive and Color3.new(0, 1, 0) or Color3.new(1, 0, 0)

        if killAuraActive then
            table.insert(activeLoops, coroutine.create(killAuraLoop))
            coroutine.resume(activeLoops[#activeLoops])
        end
    end))

    table.insert(activeConnections, autoHealButton.MouseButton1Click:Connect(function()
        autoHealActive = not autoHealActive
        autoHealButton.Text = "AUTO HEAL: " .. (autoHealActive and "ON" or "OFF")
        autoHealButton.BackgroundColor3 = autoHealActive and Color3.new(0, 1, 0) or Color3.new(1, 0, 0)

        if autoHealActive then
            table.insert(activeLoops, coroutine.create(autoHealLoop))
            coroutine.resume(activeLoops[#activeLoops])
        end
    end))

    table.insert(activeConnections, tpExitButton.MouseButton1Click:Connect(function()
        teleportToExit()
    end))

    table.insert(activeConnections, damageBoostButton.MouseButton1Click:Connect(function()
        damageBoost()
    end))

    table.insert(activeConnections, turnOnExitButton.MouseButton1Click:Connect(function()
        enableAllProximityPrompts()
    end))

    table.insert(activeConnections, instaKillButton.MouseButton1Click:Connect(function()
        instaKillBoss()
    end))

    -- NEW: Extra Boost Button Connection
    table.insert(activeConnections, extraBoostButton.MouseButton1Click:Connect(function()
        activateExtraBoost()
    end))

    -- Toggle GUI visibility
    table.insert(activeConnections, toggleButton.MouseButton1Click:Connect(function()
        guiVisible = not guiVisible
        for _, v in pairs(screenGui:GetChildren()) do
            if v ~= toggleButton then v.Visible = guiVisible end
        end
    end))

    -- GUI Hidden Initially
    for _, v in pairs(screenGui:GetChildren()) do if v ~= toggleButton then v.Visible = false end end

    -- Reload script on death
    table.insert(activeConnections, player.CharacterAdded:Connect(function()
        cleanAll()
        task.wait(1)
        initialize()
    end))
end

-- Run the script
initialize()